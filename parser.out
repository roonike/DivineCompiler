Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLEQUOTES
    FALSE
    LBRACKET
    RBRACKET
    RETURN
    SINGLEQUOTES
    TEXT
    TRUE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     declaration -> init_declarator PUNTOCOMA
Rule 4     declaration -> declarator ASSIGN function_call
Rule 5     init_declarator -> declarator
Rule 6     init_declarator -> declarator ASSIGN assignment_expression
Rule 7     declarator -> ID DOSPUNTOS type_specifier
Rule 8     declarator -> NUMERO ID DOSPUNTOS type_specifier
Rule 9     type_specifier -> INT
Rule 10    type_specifier -> FLOAT
Rule 11    type_specifier -> STRING
Rule 12    type_specifier -> BOOL
Rule 13    literal -> NUMERO
Rule 14    literal -> REAL
Rule 15    literal -> STRING
Rule 16    primary_expression -> ID
Rule 17    primary_expression -> literal
Rule 18    primary_expression -> LPAREN assignment_expression RPAREN
Rule 19    additive_expression -> primary_expression
Rule 20    additive_expression -> additive_expression PLUS primary_expression
Rule 21    additive_expression -> additive_expression MINUS primary_expression
Rule 22    multiplicative_expression -> additive_expression
Rule 23    multiplicative_expression -> multiplicative_expression TIMES additive_expression
Rule 24    multiplicative_expression -> multiplicative_expression DIVIDE additive_expression
Rule 25    relational_expression -> multiplicative_expression
Rule 26    relational_expression -> relational_expression MENORQUE multiplicative_expression
Rule 27    relational_expression -> relational_expression MAYORQUE multiplicative_expression
Rule 28    relational_expression -> relational_expression MENORIGUAL multiplicative_expression
Rule 29    relational_expression -> relational_expression MAYORIGUAL multiplicative_expression
Rule 30    equality_expression -> relational_expression
Rule 31    equality_expression -> equality_expression IGUALIGUAL relational_expression
Rule 32    equality_expression -> equality_expression NOIGUAL relational_expression
Rule 33    and_expression -> equality_expression
Rule 34    and_expression -> and_expression AND equality_expression
Rule 35    or_expression -> and_expression
Rule 36    or_expression -> or_expression OR and_expression
Rule 37    assignment_expression -> or_expression
Rule 38    assignment_expression -> primary_expression ASSIGN multiplicative_expression
Rule 39    statement -> function_call
Rule 40    statement -> compound_statement
Rule 41    statement -> assignment_statement
Rule 42    statement -> function_definition
Rule 43    statement -> declaration
Rule 44    statement -> selection_statement
Rule 45    statement -> iteration_statement
Rule 46    statement_list -> statement
Rule 47    statement_list -> statement_list statement
Rule 48    compound_statement -> LPAREN RPAREN
Rule 49    compound_statement -> LPAREN statement_list RPAREN
Rule 50    assignment_statement -> assignment_expression PUNTOCOMA
Rule 51    assignment_statement -> primary_expression ASSIGN function_call
Rule 52    ID_list -> empty
Rule 53    ID_list -> ID DOSPUNTOS type_specifier
Rule 54    ID_list -> ID_list COMA ID DOSPUNTOS type_specifier
Rule 55    parameter_list -> empty
Rule 56    parameter_list -> assignment_expression
Rule 57    parameter_list -> parameter_list COMA assignment_expression
Rule 58    function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement
Rule 59    function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA
Rule 60    selection_statement -> IF assignment_expression compound_statement
Rule 61    selection_statement -> IF assignment_expression compound_statement ELSE compound_statement
Rule 62    iteration_statement -> FOR LPAREN NUMERO RPAREN
Rule 63    empty -> <empty>

Terminals, with rules where they appear

AND                  : 34
ASSIGN               : 4 6 38 51
BOOL                 : 12
COMA                 : 54 57
DEF                  : 58
DIVIDE               : 24
DOSPUNTOS            : 7 8 53 54
DOUBLEQUOTES         : 
ELSE                 : 61
FALSE                : 
FLOAT                : 10
FOR                  : 62
ID                   : 7 8 16 53 54 58 59
IF                   : 60 61
IGUALIGUAL           : 31
INT                  : 9
LBRACKET             : 
LPAREN               : 18 48 49 58 59 62
MAYORIGUAL           : 29
MAYORQUE             : 27
MENORIGUAL           : 28
MENORQUE             : 26
MINUS                : 21
NOIGUAL              : 32
NUMERO               : 8 13 62
OR                   : 36
PLUS                 : 20
PUNTOCOMA            : 3 50 59
RBRACKET             : 
REAL                 : 14
RETURN               : 
RPAREN               : 18 48 49 58 59 62
SINGLEQUOTES         : 
STRING               : 11 15
TEXT                 : 
TIMES                : 23
TRUE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ID_list              : 54 58
additive_expression  : 20 21 22 23 24
and_expression       : 34 35 36
assignment_expression : 6 18 50 56 57 60 61
assignment_statement : 41
compound_statement   : 40 58 60 61 61
declaration          : 43
declarator           : 4 5 6
empty                : 52 55
equality_expression  : 31 32 33 34
function_call        : 4 39 51
function_definition  : 42
init_declarator      : 3
iteration_statement  : 45
literal              : 17
multiplicative_expression : 23 24 25 26 27 28 29 38
or_expression        : 36 37
parameter_list       : 57 59
primary_expression   : 19 20 21 38 51
program              : 2 0
relational_expression : 26 27 28 29 30 31 32
selection_statement  : 44
statement            : 1 2 46 47
statement_list       : 47 49
type_specifier       : 7 8 53 54

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (39) statement -> . function_call
    (40) statement -> . compound_statement
    (41) statement -> . assignment_statement
    (42) statement -> . function_definition
    (43) statement -> . declaration
    (44) statement -> . selection_statement
    (45) statement -> . iteration_statement
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN
    (50) assignment_statement -> . assignment_expression PUNTOCOMA
    (51) assignment_statement -> . primary_expression ASSIGN function_call
    (58) function_definition -> . DEF ID LPAREN ID_list RPAREN compound_statement
    (3) declaration -> . init_declarator PUNTOCOMA
    (4) declaration -> . declarator ASSIGN function_call
    (60) selection_statement -> . IF assignment_expression compound_statement
    (61) selection_statement -> . IF assignment_expression compound_statement ELSE compound_statement
    (62) iteration_statement -> . FOR LPAREN NUMERO RPAREN
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (5) init_declarator -> . declarator
    (6) init_declarator -> . declarator ASSIGN assignment_expression
    (7) declarator -> . ID DOSPUNTOS type_specifier
    (8) declarator -> . NUMERO ID DOSPUNTOS type_specifier
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    ID              shift and go to state 10
    LPAREN          shift and go to state 11
    DEF             shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    NUMERO          shift and go to state 19
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    program                        shift and go to state 1
    statement                      shift and go to state 2
    function_call                  shift and go to state 3
    compound_statement             shift and go to state 4
    assignment_statement           shift and go to state 5
    function_definition            shift and go to state 6
    declaration                    shift and go to state 7
    selection_statement            shift and go to state 8
    iteration_statement            shift and go to state 9
    assignment_expression          shift and go to state 12
    primary_expression             shift and go to state 13
    init_declarator                shift and go to state 15
    declarator                     shift and go to state 16
    or_expression                  shift and go to state 20
    multiplicative_expression      shift and go to state 21
    literal                        shift and go to state 22
    and_expression                 shift and go to state 23
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (39) statement -> . function_call
    (40) statement -> . compound_statement
    (41) statement -> . assignment_statement
    (42) statement -> . function_definition
    (43) statement -> . declaration
    (44) statement -> . selection_statement
    (45) statement -> . iteration_statement
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN
    (50) assignment_statement -> . assignment_expression PUNTOCOMA
    (51) assignment_statement -> . primary_expression ASSIGN function_call
    (58) function_definition -> . DEF ID LPAREN ID_list RPAREN compound_statement
    (3) declaration -> . init_declarator PUNTOCOMA
    (4) declaration -> . declarator ASSIGN function_call
    (60) selection_statement -> . IF assignment_expression compound_statement
    (61) selection_statement -> . IF assignment_expression compound_statement ELSE compound_statement
    (62) iteration_statement -> . FOR LPAREN NUMERO RPAREN
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (5) init_declarator -> . declarator
    (6) init_declarator -> . declarator ASSIGN assignment_expression
    (7) declarator -> . ID DOSPUNTOS type_specifier
    (8) declarator -> . NUMERO ID DOSPUNTOS type_specifier
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    ID              shift and go to state 10
    LPAREN          shift and go to state 11
    DEF             shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    NUMERO          shift and go to state 19
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    statement                      shift and go to state 29
    function_call                  shift and go to state 3
    compound_statement             shift and go to state 4
    assignment_statement           shift and go to state 5
    function_definition            shift and go to state 6
    declaration                    shift and go to state 7
    selection_statement            shift and go to state 8
    iteration_statement            shift and go to state 9
    assignment_expression          shift and go to state 12
    primary_expression             shift and go to state 13
    init_declarator                shift and go to state 15
    declarator                     shift and go to state 16
    or_expression                  shift and go to state 20
    multiplicative_expression      shift and go to state 21
    literal                        shift and go to state 22
    and_expression                 shift and go to state 23
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 2

    (1) program -> statement .

    ID              reduce using rule 1 (program -> statement .)
    LPAREN          reduce using rule 1 (program -> statement .)
    DEF             reduce using rule 1 (program -> statement .)
    IF              reduce using rule 1 (program -> statement .)
    FOR             reduce using rule 1 (program -> statement .)
    NUMERO          reduce using rule 1 (program -> statement .)
    REAL            reduce using rule 1 (program -> statement .)
    STRING          reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (39) statement -> function_call .

    ID              reduce using rule 39 (statement -> function_call .)
    LPAREN          reduce using rule 39 (statement -> function_call .)
    DEF             reduce using rule 39 (statement -> function_call .)
    IF              reduce using rule 39 (statement -> function_call .)
    FOR             reduce using rule 39 (statement -> function_call .)
    NUMERO          reduce using rule 39 (statement -> function_call .)
    REAL            reduce using rule 39 (statement -> function_call .)
    STRING          reduce using rule 39 (statement -> function_call .)
    $end            reduce using rule 39 (statement -> function_call .)
    RPAREN          reduce using rule 39 (statement -> function_call .)


state 4

    (40) statement -> compound_statement .

    ID              reduce using rule 40 (statement -> compound_statement .)
    LPAREN          reduce using rule 40 (statement -> compound_statement .)
    DEF             reduce using rule 40 (statement -> compound_statement .)
    IF              reduce using rule 40 (statement -> compound_statement .)
    FOR             reduce using rule 40 (statement -> compound_statement .)
    NUMERO          reduce using rule 40 (statement -> compound_statement .)
    REAL            reduce using rule 40 (statement -> compound_statement .)
    STRING          reduce using rule 40 (statement -> compound_statement .)
    $end            reduce using rule 40 (statement -> compound_statement .)
    RPAREN          reduce using rule 40 (statement -> compound_statement .)


state 5

    (41) statement -> assignment_statement .

    ID              reduce using rule 41 (statement -> assignment_statement .)
    LPAREN          reduce using rule 41 (statement -> assignment_statement .)
    DEF             reduce using rule 41 (statement -> assignment_statement .)
    IF              reduce using rule 41 (statement -> assignment_statement .)
    FOR             reduce using rule 41 (statement -> assignment_statement .)
    NUMERO          reduce using rule 41 (statement -> assignment_statement .)
    REAL            reduce using rule 41 (statement -> assignment_statement .)
    STRING          reduce using rule 41 (statement -> assignment_statement .)
    $end            reduce using rule 41 (statement -> assignment_statement .)
    RPAREN          reduce using rule 41 (statement -> assignment_statement .)


state 6

    (42) statement -> function_definition .

    ID              reduce using rule 42 (statement -> function_definition .)
    LPAREN          reduce using rule 42 (statement -> function_definition .)
    DEF             reduce using rule 42 (statement -> function_definition .)
    IF              reduce using rule 42 (statement -> function_definition .)
    FOR             reduce using rule 42 (statement -> function_definition .)
    NUMERO          reduce using rule 42 (statement -> function_definition .)
    REAL            reduce using rule 42 (statement -> function_definition .)
    STRING          reduce using rule 42 (statement -> function_definition .)
    $end            reduce using rule 42 (statement -> function_definition .)
    RPAREN          reduce using rule 42 (statement -> function_definition .)


state 7

    (43) statement -> declaration .

    ID              reduce using rule 43 (statement -> declaration .)
    LPAREN          reduce using rule 43 (statement -> declaration .)
    DEF             reduce using rule 43 (statement -> declaration .)
    IF              reduce using rule 43 (statement -> declaration .)
    FOR             reduce using rule 43 (statement -> declaration .)
    NUMERO          reduce using rule 43 (statement -> declaration .)
    REAL            reduce using rule 43 (statement -> declaration .)
    STRING          reduce using rule 43 (statement -> declaration .)
    $end            reduce using rule 43 (statement -> declaration .)
    RPAREN          reduce using rule 43 (statement -> declaration .)


state 8

    (44) statement -> selection_statement .

    ID              reduce using rule 44 (statement -> selection_statement .)
    LPAREN          reduce using rule 44 (statement -> selection_statement .)
    DEF             reduce using rule 44 (statement -> selection_statement .)
    IF              reduce using rule 44 (statement -> selection_statement .)
    FOR             reduce using rule 44 (statement -> selection_statement .)
    NUMERO          reduce using rule 44 (statement -> selection_statement .)
    REAL            reduce using rule 44 (statement -> selection_statement .)
    STRING          reduce using rule 44 (statement -> selection_statement .)
    $end            reduce using rule 44 (statement -> selection_statement .)
    RPAREN          reduce using rule 44 (statement -> selection_statement .)


state 9

    (45) statement -> iteration_statement .

    ID              reduce using rule 45 (statement -> iteration_statement .)
    LPAREN          reduce using rule 45 (statement -> iteration_statement .)
    DEF             reduce using rule 45 (statement -> iteration_statement .)
    IF              reduce using rule 45 (statement -> iteration_statement .)
    FOR             reduce using rule 45 (statement -> iteration_statement .)
    NUMERO          reduce using rule 45 (statement -> iteration_statement .)
    REAL            reduce using rule 45 (statement -> iteration_statement .)
    STRING          reduce using rule 45 (statement -> iteration_statement .)
    $end            reduce using rule 45 (statement -> iteration_statement .)
    RPAREN          reduce using rule 45 (statement -> iteration_statement .)


state 10

    (59) function_call -> ID . LPAREN parameter_list RPAREN PUNTOCOMA
    (16) primary_expression -> ID .
    (7) declarator -> ID . DOSPUNTOS type_specifier

    LPAREN          shift and go to state 30
    ASSIGN          reduce using rule 16 (primary_expression -> ID .)
    PLUS            reduce using rule 16 (primary_expression -> ID .)
    MINUS           reduce using rule 16 (primary_expression -> ID .)
    TIMES           reduce using rule 16 (primary_expression -> ID .)
    DIVIDE          reduce using rule 16 (primary_expression -> ID .)
    MENORQUE        reduce using rule 16 (primary_expression -> ID .)
    MAYORQUE        reduce using rule 16 (primary_expression -> ID .)
    MENORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    MAYORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    IGUALIGUAL      reduce using rule 16 (primary_expression -> ID .)
    NOIGUAL         reduce using rule 16 (primary_expression -> ID .)
    AND             reduce using rule 16 (primary_expression -> ID .)
    OR              reduce using rule 16 (primary_expression -> ID .)
    PUNTOCOMA       reduce using rule 16 (primary_expression -> ID .)
    DOSPUNTOS       shift and go to state 31


state 11

    (48) compound_statement -> LPAREN . RPAREN
    (49) compound_statement -> LPAREN . statement_list RPAREN
    (18) primary_expression -> LPAREN . assignment_expression RPAREN
    (46) statement_list -> . statement
    (47) statement_list -> . statement_list statement
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (39) statement -> . function_call
    (40) statement -> . compound_statement
    (41) statement -> . assignment_statement
    (42) statement -> . function_definition
    (43) statement -> . declaration
    (44) statement -> . selection_statement
    (45) statement -> . iteration_statement
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN
    (50) assignment_statement -> . assignment_expression PUNTOCOMA
    (51) assignment_statement -> . primary_expression ASSIGN function_call
    (58) function_definition -> . DEF ID LPAREN ID_list RPAREN compound_statement
    (3) declaration -> . init_declarator PUNTOCOMA
    (4) declaration -> . declarator ASSIGN function_call
    (60) selection_statement -> . IF assignment_expression compound_statement
    (61) selection_statement -> . IF assignment_expression compound_statement ELSE compound_statement
    (62) iteration_statement -> . FOR LPAREN NUMERO RPAREN
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (5) init_declarator -> . declarator
    (6) init_declarator -> . declarator ASSIGN assignment_expression
    (7) declarator -> . ID DOSPUNTOS type_specifier
    (8) declarator -> . NUMERO ID DOSPUNTOS type_specifier
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    RPAREN          shift and go to state 33
    ID              shift and go to state 38
    LPAREN          shift and go to state 32
    DEF             shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    NUMERO          shift and go to state 39
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    statement_list                 shift and go to state 34
    assignment_expression          shift and go to state 35
    statement                      shift and go to state 36
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 37
    multiplicative_expression      shift and go to state 21
    function_call                  shift and go to state 3
    compound_statement             shift and go to state 4
    assignment_statement           shift and go to state 5
    function_definition            shift and go to state 6
    declaration                    shift and go to state 7
    selection_statement            shift and go to state 8
    iteration_statement            shift and go to state 9
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    init_declarator                shift and go to state 15
    declarator                     shift and go to state 16
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 12

    (50) assignment_statement -> assignment_expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 40


state 13

    (51) assignment_statement -> primary_expression . ASSIGN function_call
    (38) assignment_expression -> primary_expression . ASSIGN multiplicative_expression
    (19) additive_expression -> primary_expression .

    ASSIGN          shift and go to state 41
    PLUS            reduce using rule 19 (additive_expression -> primary_expression .)
    MINUS           reduce using rule 19 (additive_expression -> primary_expression .)
    TIMES           reduce using rule 19 (additive_expression -> primary_expression .)
    DIVIDE          reduce using rule 19 (additive_expression -> primary_expression .)
    MENORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MENORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    IGUALIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    NOIGUAL         reduce using rule 19 (additive_expression -> primary_expression .)
    AND             reduce using rule 19 (additive_expression -> primary_expression .)
    OR              reduce using rule 19 (additive_expression -> primary_expression .)
    PUNTOCOMA       reduce using rule 19 (additive_expression -> primary_expression .)


state 14

    (58) function_definition -> DEF . ID LPAREN ID_list RPAREN compound_statement

    ID              shift and go to state 42


state 15

    (3) declaration -> init_declarator . PUNTOCOMA

    PUNTOCOMA       shift and go to state 43


state 16

    (4) declaration -> declarator . ASSIGN function_call
    (5) init_declarator -> declarator .
    (6) init_declarator -> declarator . ASSIGN assignment_expression

    ASSIGN          shift and go to state 44
    PUNTOCOMA       reduce using rule 5 (init_declarator -> declarator .)


state 17

    (60) selection_statement -> IF . assignment_expression compound_statement
    (61) selection_statement -> IF . assignment_expression compound_statement ELSE compound_statement
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    assignment_expression          shift and go to state 45
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 46
    multiplicative_expression      shift and go to state 21
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 18

    (62) iteration_statement -> FOR . LPAREN NUMERO RPAREN

    LPAREN          shift and go to state 50


state 19

    (8) declarator -> NUMERO . ID DOSPUNTOS type_specifier
    (13) literal -> NUMERO .

    ID              shift and go to state 51
    ASSIGN          reduce using rule 13 (literal -> NUMERO .)
    PLUS            reduce using rule 13 (literal -> NUMERO .)
    MINUS           reduce using rule 13 (literal -> NUMERO .)
    TIMES           reduce using rule 13 (literal -> NUMERO .)
    DIVIDE          reduce using rule 13 (literal -> NUMERO .)
    MENORQUE        reduce using rule 13 (literal -> NUMERO .)
    MAYORQUE        reduce using rule 13 (literal -> NUMERO .)
    MENORIGUAL      reduce using rule 13 (literal -> NUMERO .)
    MAYORIGUAL      reduce using rule 13 (literal -> NUMERO .)
    IGUALIGUAL      reduce using rule 13 (literal -> NUMERO .)
    NOIGUAL         reduce using rule 13 (literal -> NUMERO .)
    AND             reduce using rule 13 (literal -> NUMERO .)
    OR              reduce using rule 13 (literal -> NUMERO .)
    PUNTOCOMA       reduce using rule 13 (literal -> NUMERO .)


state 20

    (37) assignment_expression -> or_expression .
    (36) or_expression -> or_expression . OR and_expression

    PUNTOCOMA       reduce using rule 37 (assignment_expression -> or_expression .)
    RPAREN          reduce using rule 37 (assignment_expression -> or_expression .)
    LPAREN          reduce using rule 37 (assignment_expression -> or_expression .)
    COMA            reduce using rule 37 (assignment_expression -> or_expression .)
    OR              shift and go to state 52


state 21

    (25) relational_expression -> multiplicative_expression .
    (23) multiplicative_expression -> multiplicative_expression . TIMES additive_expression
    (24) multiplicative_expression -> multiplicative_expression . DIVIDE additive_expression

    MENORQUE        reduce using rule 25 (relational_expression -> multiplicative_expression .)
    MAYORQUE        reduce using rule 25 (relational_expression -> multiplicative_expression .)
    MENORIGUAL      reduce using rule 25 (relational_expression -> multiplicative_expression .)
    MAYORIGUAL      reduce using rule 25 (relational_expression -> multiplicative_expression .)
    IGUALIGUAL      reduce using rule 25 (relational_expression -> multiplicative_expression .)
    NOIGUAL         reduce using rule 25 (relational_expression -> multiplicative_expression .)
    AND             reduce using rule 25 (relational_expression -> multiplicative_expression .)
    OR              reduce using rule 25 (relational_expression -> multiplicative_expression .)
    PUNTOCOMA       reduce using rule 25 (relational_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 25 (relational_expression -> multiplicative_expression .)
    LPAREN          reduce using rule 25 (relational_expression -> multiplicative_expression .)
    COMA            reduce using rule 25 (relational_expression -> multiplicative_expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 22

    (17) primary_expression -> literal .

    ASSIGN          reduce using rule 17 (primary_expression -> literal .)
    PLUS            reduce using rule 17 (primary_expression -> literal .)
    MINUS           reduce using rule 17 (primary_expression -> literal .)
    TIMES           reduce using rule 17 (primary_expression -> literal .)
    DIVIDE          reduce using rule 17 (primary_expression -> literal .)
    MENORQUE        reduce using rule 17 (primary_expression -> literal .)
    MAYORQUE        reduce using rule 17 (primary_expression -> literal .)
    MENORIGUAL      reduce using rule 17 (primary_expression -> literal .)
    MAYORIGUAL      reduce using rule 17 (primary_expression -> literal .)
    IGUALIGUAL      reduce using rule 17 (primary_expression -> literal .)
    NOIGUAL         reduce using rule 17 (primary_expression -> literal .)
    AND             reduce using rule 17 (primary_expression -> literal .)
    OR              reduce using rule 17 (primary_expression -> literal .)
    PUNTOCOMA       reduce using rule 17 (primary_expression -> literal .)
    RPAREN          reduce using rule 17 (primary_expression -> literal .)
    LPAREN          reduce using rule 17 (primary_expression -> literal .)
    COMA            reduce using rule 17 (primary_expression -> literal .)


state 23

    (35) or_expression -> and_expression .
    (34) and_expression -> and_expression . AND equality_expression

    OR              reduce using rule 35 (or_expression -> and_expression .)
    PUNTOCOMA       reduce using rule 35 (or_expression -> and_expression .)
    RPAREN          reduce using rule 35 (or_expression -> and_expression .)
    LPAREN          reduce using rule 35 (or_expression -> and_expression .)
    COMA            reduce using rule 35 (or_expression -> and_expression .)
    AND             shift and go to state 55


state 24

    (14) literal -> REAL .

    ASSIGN          reduce using rule 14 (literal -> REAL .)
    PLUS            reduce using rule 14 (literal -> REAL .)
    MINUS           reduce using rule 14 (literal -> REAL .)
    TIMES           reduce using rule 14 (literal -> REAL .)
    DIVIDE          reduce using rule 14 (literal -> REAL .)
    MENORQUE        reduce using rule 14 (literal -> REAL .)
    MAYORQUE        reduce using rule 14 (literal -> REAL .)
    MENORIGUAL      reduce using rule 14 (literal -> REAL .)
    MAYORIGUAL      reduce using rule 14 (literal -> REAL .)
    IGUALIGUAL      reduce using rule 14 (literal -> REAL .)
    NOIGUAL         reduce using rule 14 (literal -> REAL .)
    AND             reduce using rule 14 (literal -> REAL .)
    OR              reduce using rule 14 (literal -> REAL .)
    PUNTOCOMA       reduce using rule 14 (literal -> REAL .)
    RPAREN          reduce using rule 14 (literal -> REAL .)
    LPAREN          reduce using rule 14 (literal -> REAL .)
    COMA            reduce using rule 14 (literal -> REAL .)


state 25

    (15) literal -> STRING .

    ASSIGN          reduce using rule 15 (literal -> STRING .)
    PLUS            reduce using rule 15 (literal -> STRING .)
    MINUS           reduce using rule 15 (literal -> STRING .)
    TIMES           reduce using rule 15 (literal -> STRING .)
    DIVIDE          reduce using rule 15 (literal -> STRING .)
    MENORQUE        reduce using rule 15 (literal -> STRING .)
    MAYORQUE        reduce using rule 15 (literal -> STRING .)
    MENORIGUAL      reduce using rule 15 (literal -> STRING .)
    MAYORIGUAL      reduce using rule 15 (literal -> STRING .)
    IGUALIGUAL      reduce using rule 15 (literal -> STRING .)
    NOIGUAL         reduce using rule 15 (literal -> STRING .)
    AND             reduce using rule 15 (literal -> STRING .)
    OR              reduce using rule 15 (literal -> STRING .)
    PUNTOCOMA       reduce using rule 15 (literal -> STRING .)
    RPAREN          reduce using rule 15 (literal -> STRING .)
    LPAREN          reduce using rule 15 (literal -> STRING .)
    COMA            reduce using rule 15 (literal -> STRING .)


state 26

    (33) and_expression -> equality_expression .
    (31) equality_expression -> equality_expression . IGUALIGUAL relational_expression
    (32) equality_expression -> equality_expression . NOIGUAL relational_expression

    AND             reduce using rule 33 (and_expression -> equality_expression .)
    OR              reduce using rule 33 (and_expression -> equality_expression .)
    PUNTOCOMA       reduce using rule 33 (and_expression -> equality_expression .)
    RPAREN          reduce using rule 33 (and_expression -> equality_expression .)
    LPAREN          reduce using rule 33 (and_expression -> equality_expression .)
    COMA            reduce using rule 33 (and_expression -> equality_expression .)
    IGUALIGUAL      shift and go to state 56
    NOIGUAL         shift and go to state 57


state 27

    (30) equality_expression -> relational_expression .
    (26) relational_expression -> relational_expression . MENORQUE multiplicative_expression
    (27) relational_expression -> relational_expression . MAYORQUE multiplicative_expression
    (28) relational_expression -> relational_expression . MENORIGUAL multiplicative_expression
    (29) relational_expression -> relational_expression . MAYORIGUAL multiplicative_expression

    IGUALIGUAL      reduce using rule 30 (equality_expression -> relational_expression .)
    NOIGUAL         reduce using rule 30 (equality_expression -> relational_expression .)
    AND             reduce using rule 30 (equality_expression -> relational_expression .)
    OR              reduce using rule 30 (equality_expression -> relational_expression .)
    PUNTOCOMA       reduce using rule 30 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 30 (equality_expression -> relational_expression .)
    LPAREN          reduce using rule 30 (equality_expression -> relational_expression .)
    COMA            reduce using rule 30 (equality_expression -> relational_expression .)
    MENORQUE        shift and go to state 58
    MAYORQUE        shift and go to state 59
    MENORIGUAL      shift and go to state 60
    MAYORIGUAL      shift and go to state 61


state 28

    (22) multiplicative_expression -> additive_expression .
    (20) additive_expression -> additive_expression . PLUS primary_expression
    (21) additive_expression -> additive_expression . MINUS primary_expression

    TIMES           reduce using rule 22 (multiplicative_expression -> additive_expression .)
    DIVIDE          reduce using rule 22 (multiplicative_expression -> additive_expression .)
    MENORQUE        reduce using rule 22 (multiplicative_expression -> additive_expression .)
    MAYORQUE        reduce using rule 22 (multiplicative_expression -> additive_expression .)
    MENORIGUAL      reduce using rule 22 (multiplicative_expression -> additive_expression .)
    MAYORIGUAL      reduce using rule 22 (multiplicative_expression -> additive_expression .)
    IGUALIGUAL      reduce using rule 22 (multiplicative_expression -> additive_expression .)
    NOIGUAL         reduce using rule 22 (multiplicative_expression -> additive_expression .)
    AND             reduce using rule 22 (multiplicative_expression -> additive_expression .)
    OR              reduce using rule 22 (multiplicative_expression -> additive_expression .)
    PUNTOCOMA       reduce using rule 22 (multiplicative_expression -> additive_expression .)
    RPAREN          reduce using rule 22 (multiplicative_expression -> additive_expression .)
    LPAREN          reduce using rule 22 (multiplicative_expression -> additive_expression .)
    COMA            reduce using rule 22 (multiplicative_expression -> additive_expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 29

    (2) program -> program statement .

    ID              reduce using rule 2 (program -> program statement .)
    LPAREN          reduce using rule 2 (program -> program statement .)
    DEF             reduce using rule 2 (program -> program statement .)
    IF              reduce using rule 2 (program -> program statement .)
    FOR             reduce using rule 2 (program -> program statement .)
    NUMERO          reduce using rule 2 (program -> program statement .)
    REAL            reduce using rule 2 (program -> program statement .)
    STRING          reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 30

    (59) function_call -> ID LPAREN . parameter_list RPAREN PUNTOCOMA
    (55) parameter_list -> . empty
    (56) parameter_list -> . assignment_expression
    (57) parameter_list -> . parameter_list COMA assignment_expression
    (63) empty -> .
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    RPAREN          reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)
    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    parameter_list                 shift and go to state 64
    empty                          shift and go to state 65
    assignment_expression          shift and go to state 66
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 46
    multiplicative_expression      shift and go to state 21
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 31

    (7) declarator -> ID DOSPUNTOS . type_specifier
    (9) type_specifier -> . INT
    (10) type_specifier -> . FLOAT
    (11) type_specifier -> . STRING
    (12) type_specifier -> . BOOL

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71

    type_specifier                 shift and go to state 67

state 32

    (18) primary_expression -> LPAREN . assignment_expression RPAREN
    (48) compound_statement -> LPAREN . RPAREN
    (49) compound_statement -> LPAREN . statement_list RPAREN
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (46) statement_list -> . statement
    (47) statement_list -> . statement_list statement
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (39) statement -> . function_call
    (40) statement -> . compound_statement
    (41) statement -> . assignment_statement
    (42) statement -> . function_definition
    (43) statement -> . declaration
    (44) statement -> . selection_statement
    (45) statement -> . iteration_statement
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN
    (50) assignment_statement -> . assignment_expression PUNTOCOMA
    (51) assignment_statement -> . primary_expression ASSIGN function_call
    (58) function_definition -> . DEF ID LPAREN ID_list RPAREN compound_statement
    (3) declaration -> . init_declarator PUNTOCOMA
    (4) declaration -> . declarator ASSIGN function_call
    (60) selection_statement -> . IF assignment_expression compound_statement
    (61) selection_statement -> . IF assignment_expression compound_statement ELSE compound_statement
    (62) iteration_statement -> . FOR LPAREN NUMERO RPAREN
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (5) init_declarator -> . declarator
    (6) init_declarator -> . declarator ASSIGN assignment_expression
    (7) declarator -> . ID DOSPUNTOS type_specifier
    (8) declarator -> . NUMERO ID DOSPUNTOS type_specifier
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    RPAREN          shift and go to state 33
    ID              shift and go to state 38
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 39
    REAL            shift and go to state 24
    STRING          shift and go to state 25
    DEF             shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18

    assignment_expression          shift and go to state 35
    statement_list                 shift and go to state 34
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 37
    multiplicative_expression      shift and go to state 21
    statement                      shift and go to state 36
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    function_call                  shift and go to state 3
    compound_statement             shift and go to state 4
    assignment_statement           shift and go to state 5
    function_definition            shift and go to state 6
    declaration                    shift and go to state 7
    selection_statement            shift and go to state 8
    iteration_statement            shift and go to state 9
    equality_expression            shift and go to state 26
    init_declarator                shift and go to state 15
    declarator                     shift and go to state 16
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 33

    (48) compound_statement -> LPAREN RPAREN .

    ID              reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    LPAREN          reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    DEF             reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    IF              reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    FOR             reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    NUMERO          reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    REAL            reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    STRING          reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    $end            reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    RPAREN          reduce using rule 48 (compound_statement -> LPAREN RPAREN .)
    ELSE            reduce using rule 48 (compound_statement -> LPAREN RPAREN .)


state 34

    (49) compound_statement -> LPAREN statement_list . RPAREN
    (47) statement_list -> statement_list . statement
    (39) statement -> . function_call
    (40) statement -> . compound_statement
    (41) statement -> . assignment_statement
    (42) statement -> . function_definition
    (43) statement -> . declaration
    (44) statement -> . selection_statement
    (45) statement -> . iteration_statement
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN
    (50) assignment_statement -> . assignment_expression PUNTOCOMA
    (51) assignment_statement -> . primary_expression ASSIGN function_call
    (58) function_definition -> . DEF ID LPAREN ID_list RPAREN compound_statement
    (3) declaration -> . init_declarator PUNTOCOMA
    (4) declaration -> . declarator ASSIGN function_call
    (60) selection_statement -> . IF assignment_expression compound_statement
    (61) selection_statement -> . IF assignment_expression compound_statement ELSE compound_statement
    (62) iteration_statement -> . FOR LPAREN NUMERO RPAREN
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (5) init_declarator -> . declarator
    (6) init_declarator -> . declarator ASSIGN assignment_expression
    (7) declarator -> . ID DOSPUNTOS type_specifier
    (8) declarator -> . NUMERO ID DOSPUNTOS type_specifier
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    RPAREN          shift and go to state 72
    ID              shift and go to state 10
    LPAREN          shift and go to state 11
    DEF             shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    NUMERO          shift and go to state 19
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    statement                      shift and go to state 73
    function_call                  shift and go to state 3
    compound_statement             shift and go to state 4
    assignment_statement           shift and go to state 5
    function_definition            shift and go to state 6
    declaration                    shift and go to state 7
    selection_statement            shift and go to state 8
    iteration_statement            shift and go to state 9
    assignment_expression          shift and go to state 12
    primary_expression             shift and go to state 13
    init_declarator                shift and go to state 15
    declarator                     shift and go to state 16
    or_expression                  shift and go to state 20
    multiplicative_expression      shift and go to state 21
    literal                        shift and go to state 22
    and_expression                 shift and go to state 23
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 35

    (18) primary_expression -> LPAREN assignment_expression . RPAREN
    (50) assignment_statement -> assignment_expression . PUNTOCOMA

    RPAREN          shift and go to state 74
    PUNTOCOMA       shift and go to state 40


state 36

    (46) statement_list -> statement .

    RPAREN          reduce using rule 46 (statement_list -> statement .)
    ID              reduce using rule 46 (statement_list -> statement .)
    LPAREN          reduce using rule 46 (statement_list -> statement .)
    DEF             reduce using rule 46 (statement_list -> statement .)
    IF              reduce using rule 46 (statement_list -> statement .)
    FOR             reduce using rule 46 (statement_list -> statement .)
    NUMERO          reduce using rule 46 (statement_list -> statement .)
    REAL            reduce using rule 46 (statement_list -> statement .)
    STRING          reduce using rule 46 (statement_list -> statement .)


state 37

    (38) assignment_expression -> primary_expression . ASSIGN multiplicative_expression
    (51) assignment_statement -> primary_expression . ASSIGN function_call
    (19) additive_expression -> primary_expression .

    ASSIGN          shift and go to state 75
    PLUS            reduce using rule 19 (additive_expression -> primary_expression .)
    MINUS           reduce using rule 19 (additive_expression -> primary_expression .)
    TIMES           reduce using rule 19 (additive_expression -> primary_expression .)
    DIVIDE          reduce using rule 19 (additive_expression -> primary_expression .)
    MENORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MENORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    IGUALIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    NOIGUAL         reduce using rule 19 (additive_expression -> primary_expression .)
    AND             reduce using rule 19 (additive_expression -> primary_expression .)
    OR              reduce using rule 19 (additive_expression -> primary_expression .)
    RPAREN          reduce using rule 19 (additive_expression -> primary_expression .)
    PUNTOCOMA       reduce using rule 19 (additive_expression -> primary_expression .)


state 38

    (16) primary_expression -> ID .
    (59) function_call -> ID . LPAREN parameter_list RPAREN PUNTOCOMA
    (7) declarator -> ID . DOSPUNTOS type_specifier

    ASSIGN          reduce using rule 16 (primary_expression -> ID .)
    PLUS            reduce using rule 16 (primary_expression -> ID .)
    MINUS           reduce using rule 16 (primary_expression -> ID .)
    TIMES           reduce using rule 16 (primary_expression -> ID .)
    DIVIDE          reduce using rule 16 (primary_expression -> ID .)
    MENORQUE        reduce using rule 16 (primary_expression -> ID .)
    MAYORQUE        reduce using rule 16 (primary_expression -> ID .)
    MENORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    MAYORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    IGUALIGUAL      reduce using rule 16 (primary_expression -> ID .)
    NOIGUAL         reduce using rule 16 (primary_expression -> ID .)
    AND             reduce using rule 16 (primary_expression -> ID .)
    OR              reduce using rule 16 (primary_expression -> ID .)
    RPAREN          reduce using rule 16 (primary_expression -> ID .)
    PUNTOCOMA       reduce using rule 16 (primary_expression -> ID .)
    LPAREN          shift and go to state 30
    DOSPUNTOS       shift and go to state 31


state 39

    (13) literal -> NUMERO .
    (8) declarator -> NUMERO . ID DOSPUNTOS type_specifier

    ASSIGN          reduce using rule 13 (literal -> NUMERO .)
    PLUS            reduce using rule 13 (literal -> NUMERO .)
    MINUS           reduce using rule 13 (literal -> NUMERO .)
    TIMES           reduce using rule 13 (literal -> NUMERO .)
    DIVIDE          reduce using rule 13 (literal -> NUMERO .)
    MENORQUE        reduce using rule 13 (literal -> NUMERO .)
    MAYORQUE        reduce using rule 13 (literal -> NUMERO .)
    MENORIGUAL      reduce using rule 13 (literal -> NUMERO .)
    MAYORIGUAL      reduce using rule 13 (literal -> NUMERO .)
    IGUALIGUAL      reduce using rule 13 (literal -> NUMERO .)
    NOIGUAL         reduce using rule 13 (literal -> NUMERO .)
    AND             reduce using rule 13 (literal -> NUMERO .)
    OR              reduce using rule 13 (literal -> NUMERO .)
    RPAREN          reduce using rule 13 (literal -> NUMERO .)
    PUNTOCOMA       reduce using rule 13 (literal -> NUMERO .)
    ID              shift and go to state 51


state 40

    (50) assignment_statement -> assignment_expression PUNTOCOMA .

    ID              reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    LPAREN          reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    DEF             reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    IF              reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    FOR             reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    NUMERO          reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    REAL            reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    STRING          reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    $end            reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)
    RPAREN          reduce using rule 50 (assignment_statement -> assignment_expression PUNTOCOMA .)


state 41

    (51) assignment_statement -> primary_expression ASSIGN . function_call
    (38) assignment_expression -> primary_expression ASSIGN . multiplicative_expression
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 79
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    primary_expression             shift and go to state 76
    function_call                  shift and go to state 77
    multiplicative_expression      shift and go to state 78
    additive_expression            shift and go to state 28
    literal                        shift and go to state 22

state 42

    (58) function_definition -> DEF ID . LPAREN ID_list RPAREN compound_statement

    LPAREN          shift and go to state 80


state 43

    (3) declaration -> init_declarator PUNTOCOMA .

    ID              reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    LPAREN          reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    DEF             reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    IF              reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    FOR             reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    NUMERO          reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    REAL            reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    STRING          reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    $end            reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)
    RPAREN          reduce using rule 3 (declaration -> init_declarator PUNTOCOMA .)


state 44

    (4) declaration -> declarator ASSIGN . function_call
    (6) init_declarator -> declarator ASSIGN . assignment_expression
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    ID              shift and go to state 79
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    function_call                  shift and go to state 81
    assignment_expression          shift and go to state 82
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 46
    multiplicative_expression      shift and go to state 21
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 45

    (60) selection_statement -> IF assignment_expression . compound_statement
    (61) selection_statement -> IF assignment_expression . compound_statement ELSE compound_statement
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN

    LPAREN          shift and go to state 84

    compound_statement             shift and go to state 83

state 46

    (38) assignment_expression -> primary_expression . ASSIGN multiplicative_expression
    (19) additive_expression -> primary_expression .

    ASSIGN          shift and go to state 85
    PLUS            reduce using rule 19 (additive_expression -> primary_expression .)
    MINUS           reduce using rule 19 (additive_expression -> primary_expression .)
    TIMES           reduce using rule 19 (additive_expression -> primary_expression .)
    DIVIDE          reduce using rule 19 (additive_expression -> primary_expression .)
    MENORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MENORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    IGUALIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    NOIGUAL         reduce using rule 19 (additive_expression -> primary_expression .)
    AND             reduce using rule 19 (additive_expression -> primary_expression .)
    OR              reduce using rule 19 (additive_expression -> primary_expression .)
    LPAREN          reduce using rule 19 (additive_expression -> primary_expression .)
    RPAREN          reduce using rule 19 (additive_expression -> primary_expression .)
    COMA            reduce using rule 19 (additive_expression -> primary_expression .)
    PUNTOCOMA       reduce using rule 19 (additive_expression -> primary_expression .)


state 47

    (16) primary_expression -> ID .

    ASSIGN          reduce using rule 16 (primary_expression -> ID .)
    PLUS            reduce using rule 16 (primary_expression -> ID .)
    MINUS           reduce using rule 16 (primary_expression -> ID .)
    TIMES           reduce using rule 16 (primary_expression -> ID .)
    DIVIDE          reduce using rule 16 (primary_expression -> ID .)
    MENORQUE        reduce using rule 16 (primary_expression -> ID .)
    MAYORQUE        reduce using rule 16 (primary_expression -> ID .)
    MENORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    MAYORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    IGUALIGUAL      reduce using rule 16 (primary_expression -> ID .)
    NOIGUAL         reduce using rule 16 (primary_expression -> ID .)
    AND             reduce using rule 16 (primary_expression -> ID .)
    OR              reduce using rule 16 (primary_expression -> ID .)
    LPAREN          reduce using rule 16 (primary_expression -> ID .)
    RPAREN          reduce using rule 16 (primary_expression -> ID .)
    COMA            reduce using rule 16 (primary_expression -> ID .)
    PUNTOCOMA       reduce using rule 16 (primary_expression -> ID .)


state 48

    (18) primary_expression -> LPAREN . assignment_expression RPAREN
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    assignment_expression          shift and go to state 86
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 46
    multiplicative_expression      shift and go to state 21
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 49

    (13) literal -> NUMERO .

    ASSIGN          reduce using rule 13 (literal -> NUMERO .)
    PLUS            reduce using rule 13 (literal -> NUMERO .)
    MINUS           reduce using rule 13 (literal -> NUMERO .)
    TIMES           reduce using rule 13 (literal -> NUMERO .)
    DIVIDE          reduce using rule 13 (literal -> NUMERO .)
    MENORQUE        reduce using rule 13 (literal -> NUMERO .)
    MAYORQUE        reduce using rule 13 (literal -> NUMERO .)
    MENORIGUAL      reduce using rule 13 (literal -> NUMERO .)
    MAYORIGUAL      reduce using rule 13 (literal -> NUMERO .)
    IGUALIGUAL      reduce using rule 13 (literal -> NUMERO .)
    NOIGUAL         reduce using rule 13 (literal -> NUMERO .)
    AND             reduce using rule 13 (literal -> NUMERO .)
    OR              reduce using rule 13 (literal -> NUMERO .)
    LPAREN          reduce using rule 13 (literal -> NUMERO .)
    RPAREN          reduce using rule 13 (literal -> NUMERO .)
    COMA            reduce using rule 13 (literal -> NUMERO .)
    PUNTOCOMA       reduce using rule 13 (literal -> NUMERO .)


state 50

    (62) iteration_statement -> FOR LPAREN . NUMERO RPAREN

    NUMERO          shift and go to state 87


state 51

    (8) declarator -> NUMERO ID . DOSPUNTOS type_specifier

    DOSPUNTOS       shift and go to state 88


state 52

    (36) or_expression -> or_expression OR . and_expression
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    and_expression                 shift and go to state 89
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    multiplicative_expression      shift and go to state 21
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 53

    (23) multiplicative_expression -> multiplicative_expression TIMES . additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    additive_expression            shift and go to state 90
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 54

    (24) multiplicative_expression -> multiplicative_expression DIVIDE . additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    additive_expression            shift and go to state 91
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 55

    (34) and_expression -> and_expression AND . equality_expression
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    equality_expression            shift and go to state 92
    relational_expression          shift and go to state 27
    multiplicative_expression      shift and go to state 21
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 56

    (31) equality_expression -> equality_expression IGUALIGUAL . relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    relational_expression          shift and go to state 93
    multiplicative_expression      shift and go to state 21
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 57

    (32) equality_expression -> equality_expression NOIGUAL . relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    relational_expression          shift and go to state 94
    multiplicative_expression      shift and go to state 21
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 58

    (26) relational_expression -> relational_expression MENORQUE . multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    multiplicative_expression      shift and go to state 95
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 59

    (27) relational_expression -> relational_expression MAYORQUE . multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    multiplicative_expression      shift and go to state 96
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 60

    (28) relational_expression -> relational_expression MENORIGUAL . multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    multiplicative_expression      shift and go to state 97
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 61

    (29) relational_expression -> relational_expression MAYORIGUAL . multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    multiplicative_expression      shift and go to state 98
    additive_expression            shift and go to state 28
    primary_expression             shift and go to state 76
    literal                        shift and go to state 22

state 62

    (20) additive_expression -> additive_expression PLUS . primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    primary_expression             shift and go to state 99
    literal                        shift and go to state 22

state 63

    (21) additive_expression -> additive_expression MINUS . primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    primary_expression             shift and go to state 100
    literal                        shift and go to state 22

state 64

    (59) function_call -> ID LPAREN parameter_list . RPAREN PUNTOCOMA
    (57) parameter_list -> parameter_list . COMA assignment_expression

    RPAREN          shift and go to state 101
    COMA            shift and go to state 102


state 65

    (55) parameter_list -> empty .

    RPAREN          reduce using rule 55 (parameter_list -> empty .)
    COMA            reduce using rule 55 (parameter_list -> empty .)


state 66

    (56) parameter_list -> assignment_expression .

    RPAREN          reduce using rule 56 (parameter_list -> assignment_expression .)
    COMA            reduce using rule 56 (parameter_list -> assignment_expression .)


state 67

    (7) declarator -> ID DOSPUNTOS type_specifier .

    ASSIGN          reduce using rule 7 (declarator -> ID DOSPUNTOS type_specifier .)
    PUNTOCOMA       reduce using rule 7 (declarator -> ID DOSPUNTOS type_specifier .)


state 68

    (9) type_specifier -> INT .

    ASSIGN          reduce using rule 9 (type_specifier -> INT .)
    PUNTOCOMA       reduce using rule 9 (type_specifier -> INT .)
    RPAREN          reduce using rule 9 (type_specifier -> INT .)
    COMA            reduce using rule 9 (type_specifier -> INT .)


state 69

    (10) type_specifier -> FLOAT .

    ASSIGN          reduce using rule 10 (type_specifier -> FLOAT .)
    PUNTOCOMA       reduce using rule 10 (type_specifier -> FLOAT .)
    RPAREN          reduce using rule 10 (type_specifier -> FLOAT .)
    COMA            reduce using rule 10 (type_specifier -> FLOAT .)


state 70

    (11) type_specifier -> STRING .

    ASSIGN          reduce using rule 11 (type_specifier -> STRING .)
    PUNTOCOMA       reduce using rule 11 (type_specifier -> STRING .)
    RPAREN          reduce using rule 11 (type_specifier -> STRING .)
    COMA            reduce using rule 11 (type_specifier -> STRING .)


state 71

    (12) type_specifier -> BOOL .

    ASSIGN          reduce using rule 12 (type_specifier -> BOOL .)
    PUNTOCOMA       reduce using rule 12 (type_specifier -> BOOL .)
    RPAREN          reduce using rule 12 (type_specifier -> BOOL .)
    COMA            reduce using rule 12 (type_specifier -> BOOL .)


state 72

    (49) compound_statement -> LPAREN statement_list RPAREN .

    ID              reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    LPAREN          reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    DEF             reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    IF              reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    FOR             reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    NUMERO          reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    REAL            reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    STRING          reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    $end            reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    RPAREN          reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)
    ELSE            reduce using rule 49 (compound_statement -> LPAREN statement_list RPAREN .)


state 73

    (47) statement_list -> statement_list statement .

    RPAREN          reduce using rule 47 (statement_list -> statement_list statement .)
    ID              reduce using rule 47 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 47 (statement_list -> statement_list statement .)
    DEF             reduce using rule 47 (statement_list -> statement_list statement .)
    IF              reduce using rule 47 (statement_list -> statement_list statement .)
    FOR             reduce using rule 47 (statement_list -> statement_list statement .)
    NUMERO          reduce using rule 47 (statement_list -> statement_list statement .)
    REAL            reduce using rule 47 (statement_list -> statement_list statement .)
    STRING          reduce using rule 47 (statement_list -> statement_list statement .)


state 74

    (18) primary_expression -> LPAREN assignment_expression RPAREN .

    ASSIGN          reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    PLUS            reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    MINUS           reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    TIMES           reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    DIVIDE          reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    MENORQUE        reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    MAYORQUE        reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    MENORIGUAL      reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    MAYORIGUAL      reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    IGUALIGUAL      reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    NOIGUAL         reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    AND             reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    OR              reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    PUNTOCOMA       reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    RPAREN          reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    LPAREN          reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)
    COMA            reduce using rule 18 (primary_expression -> LPAREN assignment_expression RPAREN .)


state 75

    (38) assignment_expression -> primary_expression ASSIGN . multiplicative_expression
    (51) assignment_statement -> primary_expression ASSIGN . function_call
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 79
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    primary_expression             shift and go to state 76
    multiplicative_expression      shift and go to state 78
    function_call                  shift and go to state 77
    additive_expression            shift and go to state 28
    literal                        shift and go to state 22

state 76

    (19) additive_expression -> primary_expression .

    PLUS            reduce using rule 19 (additive_expression -> primary_expression .)
    MINUS           reduce using rule 19 (additive_expression -> primary_expression .)
    TIMES           reduce using rule 19 (additive_expression -> primary_expression .)
    DIVIDE          reduce using rule 19 (additive_expression -> primary_expression .)
    PUNTOCOMA       reduce using rule 19 (additive_expression -> primary_expression .)
    MENORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORQUE        reduce using rule 19 (additive_expression -> primary_expression .)
    MENORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    MAYORIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    IGUALIGUAL      reduce using rule 19 (additive_expression -> primary_expression .)
    NOIGUAL         reduce using rule 19 (additive_expression -> primary_expression .)
    AND             reduce using rule 19 (additive_expression -> primary_expression .)
    OR              reduce using rule 19 (additive_expression -> primary_expression .)
    RPAREN          reduce using rule 19 (additive_expression -> primary_expression .)
    LPAREN          reduce using rule 19 (additive_expression -> primary_expression .)
    COMA            reduce using rule 19 (additive_expression -> primary_expression .)


state 77

    (51) assignment_statement -> primary_expression ASSIGN function_call .

    ID              reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    LPAREN          reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    DEF             reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    IF              reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    FOR             reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    NUMERO          reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    REAL            reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    STRING          reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    $end            reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)
    RPAREN          reduce using rule 51 (assignment_statement -> primary_expression ASSIGN function_call .)


state 78

    (38) assignment_expression -> primary_expression ASSIGN multiplicative_expression .
    (23) multiplicative_expression -> multiplicative_expression . TIMES additive_expression
    (24) multiplicative_expression -> multiplicative_expression . DIVIDE additive_expression

    PUNTOCOMA       reduce using rule 38 (assignment_expression -> primary_expression ASSIGN multiplicative_expression .)
    RPAREN          reduce using rule 38 (assignment_expression -> primary_expression ASSIGN multiplicative_expression .)
    LPAREN          reduce using rule 38 (assignment_expression -> primary_expression ASSIGN multiplicative_expression .)
    COMA            reduce using rule 38 (assignment_expression -> primary_expression ASSIGN multiplicative_expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 79

    (59) function_call -> ID . LPAREN parameter_list RPAREN PUNTOCOMA
    (16) primary_expression -> ID .

    LPAREN          shift and go to state 30
    PLUS            reduce using rule 16 (primary_expression -> ID .)
    MINUS           reduce using rule 16 (primary_expression -> ID .)
    TIMES           reduce using rule 16 (primary_expression -> ID .)
    DIVIDE          reduce using rule 16 (primary_expression -> ID .)
    PUNTOCOMA       reduce using rule 16 (primary_expression -> ID .)
    ASSIGN          reduce using rule 16 (primary_expression -> ID .)
    MENORQUE        reduce using rule 16 (primary_expression -> ID .)
    MAYORQUE        reduce using rule 16 (primary_expression -> ID .)
    MENORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    MAYORIGUAL      reduce using rule 16 (primary_expression -> ID .)
    IGUALIGUAL      reduce using rule 16 (primary_expression -> ID .)
    NOIGUAL         reduce using rule 16 (primary_expression -> ID .)
    AND             reduce using rule 16 (primary_expression -> ID .)
    OR              reduce using rule 16 (primary_expression -> ID .)
    RPAREN          reduce using rule 16 (primary_expression -> ID .)


state 80

    (58) function_definition -> DEF ID LPAREN . ID_list RPAREN compound_statement
    (52) ID_list -> . empty
    (53) ID_list -> . ID DOSPUNTOS type_specifier
    (54) ID_list -> . ID_list COMA ID DOSPUNTOS type_specifier
    (63) empty -> .

    ID              shift and go to state 103
    RPAREN          reduce using rule 63 (empty -> .)
    COMA            reduce using rule 63 (empty -> .)

    ID_list                        shift and go to state 104
    empty                          shift and go to state 105

state 81

    (4) declaration -> declarator ASSIGN function_call .

    ID              reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    LPAREN          reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    DEF             reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    IF              reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    FOR             reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    NUMERO          reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    REAL            reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    STRING          reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    $end            reduce using rule 4 (declaration -> declarator ASSIGN function_call .)
    RPAREN          reduce using rule 4 (declaration -> declarator ASSIGN function_call .)


state 82

    (6) init_declarator -> declarator ASSIGN assignment_expression .

    PUNTOCOMA       reduce using rule 6 (init_declarator -> declarator ASSIGN assignment_expression .)


state 83

    (60) selection_statement -> IF assignment_expression compound_statement .
    (61) selection_statement -> IF assignment_expression compound_statement . ELSE compound_statement

    ID              reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    LPAREN          reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    DEF             reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    IF              reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    FOR             reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    NUMERO          reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    REAL            reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    STRING          reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    $end            reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    RPAREN          reduce using rule 60 (selection_statement -> IF assignment_expression compound_statement .)
    ELSE            shift and go to state 106


state 84

    (48) compound_statement -> LPAREN . RPAREN
    (49) compound_statement -> LPAREN . statement_list RPAREN
    (46) statement_list -> . statement
    (47) statement_list -> . statement_list statement
    (39) statement -> . function_call
    (40) statement -> . compound_statement
    (41) statement -> . assignment_statement
    (42) statement -> . function_definition
    (43) statement -> . declaration
    (44) statement -> . selection_statement
    (45) statement -> . iteration_statement
    (59) function_call -> . ID LPAREN parameter_list RPAREN PUNTOCOMA
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN
    (50) assignment_statement -> . assignment_expression PUNTOCOMA
    (51) assignment_statement -> . primary_expression ASSIGN function_call
    (58) function_definition -> . DEF ID LPAREN ID_list RPAREN compound_statement
    (3) declaration -> . init_declarator PUNTOCOMA
    (4) declaration -> . declarator ASSIGN function_call
    (60) selection_statement -> . IF assignment_expression compound_statement
    (61) selection_statement -> . IF assignment_expression compound_statement ELSE compound_statement
    (62) iteration_statement -> . FOR LPAREN NUMERO RPAREN
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (5) init_declarator -> . declarator
    (6) init_declarator -> . declarator ASSIGN assignment_expression
    (7) declarator -> . ID DOSPUNTOS type_specifier
    (8) declarator -> . NUMERO ID DOSPUNTOS type_specifier
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    RPAREN          shift and go to state 33
    ID              shift and go to state 10
    LPAREN          shift and go to state 11
    DEF             shift and go to state 14
    IF              shift and go to state 17
    FOR             shift and go to state 18
    NUMERO          shift and go to state 19
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    statement_list                 shift and go to state 34
    statement                      shift and go to state 36
    function_call                  shift and go to state 3
    compound_statement             shift and go to state 4
    assignment_statement           shift and go to state 5
    function_definition            shift and go to state 6
    declaration                    shift and go to state 7
    selection_statement            shift and go to state 8
    iteration_statement            shift and go to state 9
    assignment_expression          shift and go to state 12
    primary_expression             shift and go to state 13
    init_declarator                shift and go to state 15
    declarator                     shift and go to state 16
    or_expression                  shift and go to state 20
    multiplicative_expression      shift and go to state 21
    literal                        shift and go to state 22
    and_expression                 shift and go to state 23
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 85

    (38) assignment_expression -> primary_expression ASSIGN . multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    primary_expression             shift and go to state 76
    multiplicative_expression      shift and go to state 78
    additive_expression            shift and go to state 28
    literal                        shift and go to state 22

state 86

    (18) primary_expression -> LPAREN assignment_expression . RPAREN

    RPAREN          shift and go to state 74


state 87

    (62) iteration_statement -> FOR LPAREN NUMERO . RPAREN

    RPAREN          shift and go to state 107


state 88

    (8) declarator -> NUMERO ID DOSPUNTOS . type_specifier
    (9) type_specifier -> . INT
    (10) type_specifier -> . FLOAT
    (11) type_specifier -> . STRING
    (12) type_specifier -> . BOOL

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71

    type_specifier                 shift and go to state 108

state 89

    (36) or_expression -> or_expression OR and_expression .
    (34) and_expression -> and_expression . AND equality_expression

    OR              reduce using rule 36 (or_expression -> or_expression OR and_expression .)
    PUNTOCOMA       reduce using rule 36 (or_expression -> or_expression OR and_expression .)
    RPAREN          reduce using rule 36 (or_expression -> or_expression OR and_expression .)
    LPAREN          reduce using rule 36 (or_expression -> or_expression OR and_expression .)
    COMA            reduce using rule 36 (or_expression -> or_expression OR and_expression .)
    AND             shift and go to state 55


state 90

    (23) multiplicative_expression -> multiplicative_expression TIMES additive_expression .
    (20) additive_expression -> additive_expression . PLUS primary_expression
    (21) additive_expression -> additive_expression . MINUS primary_expression

    TIMES           reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    DIVIDE          reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    MENORQUE        reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    MAYORQUE        reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    MENORIGUAL      reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    MAYORIGUAL      reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    IGUALIGUAL      reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    NOIGUAL         reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    AND             reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    OR              reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    PUNTOCOMA       reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    RPAREN          reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    LPAREN          reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    COMA            reduce using rule 23 (multiplicative_expression -> multiplicative_expression TIMES additive_expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 91

    (24) multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .
    (20) additive_expression -> additive_expression . PLUS primary_expression
    (21) additive_expression -> additive_expression . MINUS primary_expression

    TIMES           reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    DIVIDE          reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    MENORQUE        reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    MAYORQUE        reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    MENORIGUAL      reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    MAYORIGUAL      reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    IGUALIGUAL      reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    NOIGUAL         reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    AND             reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    OR              reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    PUNTOCOMA       reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    RPAREN          reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    LPAREN          reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    COMA            reduce using rule 24 (multiplicative_expression -> multiplicative_expression DIVIDE additive_expression .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 92

    (34) and_expression -> and_expression AND equality_expression .
    (31) equality_expression -> equality_expression . IGUALIGUAL relational_expression
    (32) equality_expression -> equality_expression . NOIGUAL relational_expression

    AND             reduce using rule 34 (and_expression -> and_expression AND equality_expression .)
    OR              reduce using rule 34 (and_expression -> and_expression AND equality_expression .)
    PUNTOCOMA       reduce using rule 34 (and_expression -> and_expression AND equality_expression .)
    RPAREN          reduce using rule 34 (and_expression -> and_expression AND equality_expression .)
    LPAREN          reduce using rule 34 (and_expression -> and_expression AND equality_expression .)
    COMA            reduce using rule 34 (and_expression -> and_expression AND equality_expression .)
    IGUALIGUAL      shift and go to state 56
    NOIGUAL         shift and go to state 57


state 93

    (31) equality_expression -> equality_expression IGUALIGUAL relational_expression .
    (26) relational_expression -> relational_expression . MENORQUE multiplicative_expression
    (27) relational_expression -> relational_expression . MAYORQUE multiplicative_expression
    (28) relational_expression -> relational_expression . MENORIGUAL multiplicative_expression
    (29) relational_expression -> relational_expression . MAYORIGUAL multiplicative_expression

    IGUALIGUAL      reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    NOIGUAL         reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    AND             reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    OR              reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    PUNTOCOMA       reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    RPAREN          reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    LPAREN          reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    COMA            reduce using rule 31 (equality_expression -> equality_expression IGUALIGUAL relational_expression .)
    MENORQUE        shift and go to state 58
    MAYORQUE        shift and go to state 59
    MENORIGUAL      shift and go to state 60
    MAYORIGUAL      shift and go to state 61


state 94

    (32) equality_expression -> equality_expression NOIGUAL relational_expression .
    (26) relational_expression -> relational_expression . MENORQUE multiplicative_expression
    (27) relational_expression -> relational_expression . MAYORQUE multiplicative_expression
    (28) relational_expression -> relational_expression . MENORIGUAL multiplicative_expression
    (29) relational_expression -> relational_expression . MAYORIGUAL multiplicative_expression

    IGUALIGUAL      reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    NOIGUAL         reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    AND             reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    OR              reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    PUNTOCOMA       reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    RPAREN          reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    LPAREN          reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    COMA            reduce using rule 32 (equality_expression -> equality_expression NOIGUAL relational_expression .)
    MENORQUE        shift and go to state 58
    MAYORQUE        shift and go to state 59
    MENORIGUAL      shift and go to state 60
    MAYORIGUAL      shift and go to state 61


state 95

    (26) relational_expression -> relational_expression MENORQUE multiplicative_expression .
    (23) multiplicative_expression -> multiplicative_expression . TIMES additive_expression
    (24) multiplicative_expression -> multiplicative_expression . DIVIDE additive_expression

    MENORQUE        reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    MAYORQUE        reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    MENORIGUAL      reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    MAYORIGUAL      reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    IGUALIGUAL      reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    NOIGUAL         reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    AND             reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    OR              reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    PUNTOCOMA       reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    RPAREN          reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    LPAREN          reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    COMA            reduce using rule 26 (relational_expression -> relational_expression MENORQUE multiplicative_expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 96

    (27) relational_expression -> relational_expression MAYORQUE multiplicative_expression .
    (23) multiplicative_expression -> multiplicative_expression . TIMES additive_expression
    (24) multiplicative_expression -> multiplicative_expression . DIVIDE additive_expression

    MENORQUE        reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    MAYORQUE        reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    MENORIGUAL      reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    MAYORIGUAL      reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    IGUALIGUAL      reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    NOIGUAL         reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    AND             reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    OR              reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    PUNTOCOMA       reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    RPAREN          reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    LPAREN          reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    COMA            reduce using rule 27 (relational_expression -> relational_expression MAYORQUE multiplicative_expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 97

    (28) relational_expression -> relational_expression MENORIGUAL multiplicative_expression .
    (23) multiplicative_expression -> multiplicative_expression . TIMES additive_expression
    (24) multiplicative_expression -> multiplicative_expression . DIVIDE additive_expression

    MENORQUE        reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    MAYORQUE        reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    MENORIGUAL      reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    MAYORIGUAL      reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    IGUALIGUAL      reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    NOIGUAL         reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    AND             reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    OR              reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    PUNTOCOMA       reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    RPAREN          reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    LPAREN          reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    COMA            reduce using rule 28 (relational_expression -> relational_expression MENORIGUAL multiplicative_expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 98

    (29) relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .
    (23) multiplicative_expression -> multiplicative_expression . TIMES additive_expression
    (24) multiplicative_expression -> multiplicative_expression . DIVIDE additive_expression

    MENORQUE        reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    MAYORQUE        reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    MENORIGUAL      reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    MAYORIGUAL      reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    IGUALIGUAL      reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    NOIGUAL         reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    AND             reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    OR              reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    PUNTOCOMA       reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    RPAREN          reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    LPAREN          reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    COMA            reduce using rule 29 (relational_expression -> relational_expression MAYORIGUAL multiplicative_expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 99

    (20) additive_expression -> additive_expression PLUS primary_expression .

    PLUS            reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    MINUS           reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    TIMES           reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    DIVIDE          reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    MENORQUE        reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    MAYORQUE        reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    MENORIGUAL      reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    MAYORIGUAL      reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    IGUALIGUAL      reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    NOIGUAL         reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    AND             reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    OR              reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    PUNTOCOMA       reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    RPAREN          reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    LPAREN          reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)
    COMA            reduce using rule 20 (additive_expression -> additive_expression PLUS primary_expression .)


state 100

    (21) additive_expression -> additive_expression MINUS primary_expression .

    PLUS            reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    MINUS           reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    TIMES           reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    DIVIDE          reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    MENORQUE        reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    MAYORQUE        reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    MENORIGUAL      reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    MAYORIGUAL      reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    IGUALIGUAL      reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    NOIGUAL         reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    AND             reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    OR              reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    PUNTOCOMA       reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    RPAREN          reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    LPAREN          reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)
    COMA            reduce using rule 21 (additive_expression -> additive_expression MINUS primary_expression .)


state 101

    (59) function_call -> ID LPAREN parameter_list RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 109


state 102

    (57) parameter_list -> parameter_list COMA . assignment_expression
    (37) assignment_expression -> . or_expression
    (38) assignment_expression -> . primary_expression ASSIGN multiplicative_expression
    (35) or_expression -> . and_expression
    (36) or_expression -> . or_expression OR and_expression
    (16) primary_expression -> . ID
    (17) primary_expression -> . literal
    (18) primary_expression -> . LPAREN assignment_expression RPAREN
    (33) and_expression -> . equality_expression
    (34) and_expression -> . and_expression AND equality_expression
    (13) literal -> . NUMERO
    (14) literal -> . REAL
    (15) literal -> . STRING
    (30) equality_expression -> . relational_expression
    (31) equality_expression -> . equality_expression IGUALIGUAL relational_expression
    (32) equality_expression -> . equality_expression NOIGUAL relational_expression
    (25) relational_expression -> . multiplicative_expression
    (26) relational_expression -> . relational_expression MENORQUE multiplicative_expression
    (27) relational_expression -> . relational_expression MAYORQUE multiplicative_expression
    (28) relational_expression -> . relational_expression MENORIGUAL multiplicative_expression
    (29) relational_expression -> . relational_expression MAYORIGUAL multiplicative_expression
    (22) multiplicative_expression -> . additive_expression
    (23) multiplicative_expression -> . multiplicative_expression TIMES additive_expression
    (24) multiplicative_expression -> . multiplicative_expression DIVIDE additive_expression
    (19) additive_expression -> . primary_expression
    (20) additive_expression -> . additive_expression PLUS primary_expression
    (21) additive_expression -> . additive_expression MINUS primary_expression

    ID              shift and go to state 47
    LPAREN          shift and go to state 48
    NUMERO          shift and go to state 49
    REAL            shift and go to state 24
    STRING          shift and go to state 25

    assignment_expression          shift and go to state 110
    or_expression                  shift and go to state 20
    primary_expression             shift and go to state 46
    multiplicative_expression      shift and go to state 21
    and_expression                 shift and go to state 23
    literal                        shift and go to state 22
    equality_expression            shift and go to state 26
    relational_expression          shift and go to state 27
    additive_expression            shift and go to state 28

state 103

    (53) ID_list -> ID . DOSPUNTOS type_specifier

    DOSPUNTOS       shift and go to state 111


state 104

    (58) function_definition -> DEF ID LPAREN ID_list . RPAREN compound_statement
    (54) ID_list -> ID_list . COMA ID DOSPUNTOS type_specifier

    RPAREN          shift and go to state 112
    COMA            shift and go to state 113


state 105

    (52) ID_list -> empty .

    RPAREN          reduce using rule 52 (ID_list -> empty .)
    COMA            reduce using rule 52 (ID_list -> empty .)


state 106

    (61) selection_statement -> IF assignment_expression compound_statement ELSE . compound_statement
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN

    LPAREN          shift and go to state 84

    compound_statement             shift and go to state 114

state 107

    (62) iteration_statement -> FOR LPAREN NUMERO RPAREN .

    ID              reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    LPAREN          reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    DEF             reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    IF              reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    FOR             reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    NUMERO          reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    REAL            reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    STRING          reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    $end            reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)
    RPAREN          reduce using rule 62 (iteration_statement -> FOR LPAREN NUMERO RPAREN .)


state 108

    (8) declarator -> NUMERO ID DOSPUNTOS type_specifier .

    ASSIGN          reduce using rule 8 (declarator -> NUMERO ID DOSPUNTOS type_specifier .)
    PUNTOCOMA       reduce using rule 8 (declarator -> NUMERO ID DOSPUNTOS type_specifier .)


state 109

    (59) function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .

    ID              reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    LPAREN          reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    DEF             reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    IF              reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    FOR             reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    NUMERO          reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    REAL            reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    STRING          reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    $end            reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)
    RPAREN          reduce using rule 59 (function_call -> ID LPAREN parameter_list RPAREN PUNTOCOMA .)


state 110

    (57) parameter_list -> parameter_list COMA assignment_expression .

    RPAREN          reduce using rule 57 (parameter_list -> parameter_list COMA assignment_expression .)
    COMA            reduce using rule 57 (parameter_list -> parameter_list COMA assignment_expression .)


state 111

    (53) ID_list -> ID DOSPUNTOS . type_specifier
    (9) type_specifier -> . INT
    (10) type_specifier -> . FLOAT
    (11) type_specifier -> . STRING
    (12) type_specifier -> . BOOL

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71

    type_specifier                 shift and go to state 115

state 112

    (58) function_definition -> DEF ID LPAREN ID_list RPAREN . compound_statement
    (48) compound_statement -> . LPAREN RPAREN
    (49) compound_statement -> . LPAREN statement_list RPAREN

    LPAREN          shift and go to state 84

    compound_statement             shift and go to state 116

state 113

    (54) ID_list -> ID_list COMA . ID DOSPUNTOS type_specifier

    ID              shift and go to state 117


state 114

    (61) selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .

    ID              reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    LPAREN          reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    DEF             reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    IF              reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    FOR             reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    NUMERO          reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    REAL            reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    STRING          reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    $end            reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)
    RPAREN          reduce using rule 61 (selection_statement -> IF assignment_expression compound_statement ELSE compound_statement .)


state 115

    (53) ID_list -> ID DOSPUNTOS type_specifier .

    RPAREN          reduce using rule 53 (ID_list -> ID DOSPUNTOS type_specifier .)
    COMA            reduce using rule 53 (ID_list -> ID DOSPUNTOS type_specifier .)


state 116

    (58) function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .

    ID              reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    LPAREN          reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    DEF             reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    IF              reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    FOR             reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    NUMERO          reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    REAL            reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    STRING          reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    $end            reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)
    RPAREN          reduce using rule 58 (function_definition -> DEF ID LPAREN ID_list RPAREN compound_statement .)


state 117

    (54) ID_list -> ID_list COMA ID . DOSPUNTOS type_specifier

    DOSPUNTOS       shift and go to state 118


state 118

    (54) ID_list -> ID_list COMA ID DOSPUNTOS . type_specifier
    (9) type_specifier -> . INT
    (10) type_specifier -> . FLOAT
    (11) type_specifier -> . STRING
    (12) type_specifier -> . BOOL

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70
    BOOL            shift and go to state 71

    type_specifier                 shift and go to state 119

state 119

    (54) ID_list -> ID_list COMA ID DOSPUNTOS type_specifier .

    RPAREN          reduce using rule 54 (ID_list -> ID_list COMA ID DOSPUNTOS type_specifier .)
    COMA            reduce using rule 54 (ID_list -> ID_list COMA ID DOSPUNTOS type_specifier .)

